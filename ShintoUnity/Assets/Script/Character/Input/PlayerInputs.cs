//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Script/Character/Input/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""fdf12ca5-fcbe-419e-8870-d8e012639a94"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""1b4757a9-fc23-46c1-833e-041d478bd48b"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""a9b4f3f5-f4af-43d0-96aa-a5dcdf05af6a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ShootBomb"",
                    ""type"": ""Button"",
                    ""id"": ""4f8db994-019e-401c-8102-dc198fe8c4b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThrowBomb"",
                    ""type"": ""Button"",
                    ""id"": ""b1c04d8e-fa11-4aa5-88e1-09e83ab47b93"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DropBomb"",
                    ""type"": ""Button"",
                    ""id"": ""c6628e13-71d0-4aeb-8fd1-1eb696fb0671"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollUp"",
                    ""type"": ""Button"",
                    ""id"": ""96a31d80-38b3-4a4e-af93-2a1f70ff9b4c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollDown"",
                    ""type"": ""Button"",
                    ""id"": ""270d7523-f588-4027-9014-3336929e2162"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotatePlayer"",
                    ""type"": ""Button"",
                    ""id"": ""9c8a21ff-16da-4ae1-a2db-7c0be4150c16"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Respawn"",
                    ""type"": ""Button"",
                    ""id"": ""d3fb2173-2e1e-43d3-a161-3f28b541323b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""afa85dd5-383d-46ec-9755-10296d8c8554"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5acca714-ef0b-43d4-bcb1-743d3d8a82ba"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22baf2c8-b142-4ab3-bda3-39c55d51bcc3"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootBomb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0092b05-48c1-4e2e-b5d2-00d0c20017c7"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrowBomb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""295accec-73a2-4ab9-9bd7-a89290fe2a31"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DropBomb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""3D Vector"",
                    ""id"": ""2a75c21c-5ab9-4c5b-b0c6-5f09be3c7978"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c0e83633-8287-40be-bc1a-20528f6d4480"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9eed3106-3ebd-446c-afa8-8387132b2306"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6f54feda-9195-4aee-a891-8bfc241a8e37"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""535919d1-14a1-4f2d-9cc3-f8936c6e03a7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""forward"",
                    ""id"": ""90292d32-5ba9-4260-8a3c-48f095c2b32d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""backward"",
                    ""id"": ""54d7a5b2-018d-442a-a7fb-b0782828f478"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""deef6e0e-d1e1-41dc-8363-0c07332c859b"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c08152b5-f5e1-456f-a18f-c2a8d8da6e71"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76ba1bc4-663d-41e9-abf3-af36f3289b39"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotatePlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb28ac24-ec13-4ce1-af54-29c857879141"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotatePlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef9b7015-b0fb-42e0-9a67-b019ba1a426e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotatePlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97ce08f1-aab4-433b-94df-b8328e07f5c9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotatePlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1825f5c-4794-4560-8cd8-977f6388894a"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Respawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""657f357e-9db8-4eb6-8468-cc8a04faa881"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Rotate = m_Player.FindAction("Rotate", throwIfNotFound: true);
        m_Player_ShootBomb = m_Player.FindAction("ShootBomb", throwIfNotFound: true);
        m_Player_ThrowBomb = m_Player.FindAction("ThrowBomb", throwIfNotFound: true);
        m_Player_DropBomb = m_Player.FindAction("DropBomb", throwIfNotFound: true);
        m_Player_ScrollUp = m_Player.FindAction("ScrollUp", throwIfNotFound: true);
        m_Player_ScrollDown = m_Player.FindAction("ScrollDown", throwIfNotFound: true);
        m_Player_RotatePlayer = m_Player.FindAction("RotatePlayer", throwIfNotFound: true);
        m_Player_Respawn = m_Player.FindAction("Respawn", throwIfNotFound: true);
        m_Player_Pause = m_Player.FindAction("Pause", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Rotate;
    private readonly InputAction m_Player_ShootBomb;
    private readonly InputAction m_Player_ThrowBomb;
    private readonly InputAction m_Player_DropBomb;
    private readonly InputAction m_Player_ScrollUp;
    private readonly InputAction m_Player_ScrollDown;
    private readonly InputAction m_Player_RotatePlayer;
    private readonly InputAction m_Player_Respawn;
    private readonly InputAction m_Player_Pause;
    public struct PlayerActions
    {
        private @PlayerInputs m_Wrapper;
        public PlayerActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Rotate => m_Wrapper.m_Player_Rotate;
        public InputAction @ShootBomb => m_Wrapper.m_Player_ShootBomb;
        public InputAction @ThrowBomb => m_Wrapper.m_Player_ThrowBomb;
        public InputAction @DropBomb => m_Wrapper.m_Player_DropBomb;
        public InputAction @ScrollUp => m_Wrapper.m_Player_ScrollUp;
        public InputAction @ScrollDown => m_Wrapper.m_Player_ScrollDown;
        public InputAction @RotatePlayer => m_Wrapper.m_Player_RotatePlayer;
        public InputAction @Respawn => m_Wrapper.m_Player_Respawn;
        public InputAction @Pause => m_Wrapper.m_Player_Pause;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Rotate.started += instance.OnRotate;
            @Rotate.performed += instance.OnRotate;
            @Rotate.canceled += instance.OnRotate;
            @ShootBomb.started += instance.OnShootBomb;
            @ShootBomb.performed += instance.OnShootBomb;
            @ShootBomb.canceled += instance.OnShootBomb;
            @ThrowBomb.started += instance.OnThrowBomb;
            @ThrowBomb.performed += instance.OnThrowBomb;
            @ThrowBomb.canceled += instance.OnThrowBomb;
            @DropBomb.started += instance.OnDropBomb;
            @DropBomb.performed += instance.OnDropBomb;
            @DropBomb.canceled += instance.OnDropBomb;
            @ScrollUp.started += instance.OnScrollUp;
            @ScrollUp.performed += instance.OnScrollUp;
            @ScrollUp.canceled += instance.OnScrollUp;
            @ScrollDown.started += instance.OnScrollDown;
            @ScrollDown.performed += instance.OnScrollDown;
            @ScrollDown.canceled += instance.OnScrollDown;
            @RotatePlayer.started += instance.OnRotatePlayer;
            @RotatePlayer.performed += instance.OnRotatePlayer;
            @RotatePlayer.canceled += instance.OnRotatePlayer;
            @Respawn.started += instance.OnRespawn;
            @Respawn.performed += instance.OnRespawn;
            @Respawn.canceled += instance.OnRespawn;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Rotate.started -= instance.OnRotate;
            @Rotate.performed -= instance.OnRotate;
            @Rotate.canceled -= instance.OnRotate;
            @ShootBomb.started -= instance.OnShootBomb;
            @ShootBomb.performed -= instance.OnShootBomb;
            @ShootBomb.canceled -= instance.OnShootBomb;
            @ThrowBomb.started -= instance.OnThrowBomb;
            @ThrowBomb.performed -= instance.OnThrowBomb;
            @ThrowBomb.canceled -= instance.OnThrowBomb;
            @DropBomb.started -= instance.OnDropBomb;
            @DropBomb.performed -= instance.OnDropBomb;
            @DropBomb.canceled -= instance.OnDropBomb;
            @ScrollUp.started -= instance.OnScrollUp;
            @ScrollUp.performed -= instance.OnScrollUp;
            @ScrollUp.canceled -= instance.OnScrollUp;
            @ScrollDown.started -= instance.OnScrollDown;
            @ScrollDown.performed -= instance.OnScrollDown;
            @ScrollDown.canceled -= instance.OnScrollDown;
            @RotatePlayer.started -= instance.OnRotatePlayer;
            @RotatePlayer.performed -= instance.OnRotatePlayer;
            @RotatePlayer.canceled -= instance.OnRotatePlayer;
            @Respawn.started -= instance.OnRespawn;
            @Respawn.performed -= instance.OnRespawn;
            @Respawn.canceled -= instance.OnRespawn;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnRotate(InputAction.CallbackContext context);
        void OnShootBomb(InputAction.CallbackContext context);
        void OnThrowBomb(InputAction.CallbackContext context);
        void OnDropBomb(InputAction.CallbackContext context);
        void OnScrollUp(InputAction.CallbackContext context);
        void OnScrollDown(InputAction.CallbackContext context);
        void OnRotatePlayer(InputAction.CallbackContext context);
        void OnRespawn(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
}
